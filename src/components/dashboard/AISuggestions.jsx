import React, { useState } from 'react';
import { Sparkles, X, Check, RefreshCw, Loader } from 'lucide-react';
import { chatWithDeepSeek } from '../../api/deepseek';

const getSectionPrompt = (sectionType) => {
  const prompts = {
    hero: `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É IT-–∫–æ–º–ø–∞–Ω–∏–π. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π HERO —Å–µ–∫—Ü–∏—é (–≥–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫).

–¢–í–û–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –î–í–ê —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è Hero —Å–µ–∫—Ü–∏–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ:
1. –£–ª—É—á—à–µ–Ω–∏–µ –¥–ª—è –°–õ–û–ì–ê–ù–ê (tagline)
2. –£–ª—É—á—à–µ–Ω–∏–µ –¥–ª—è –û–ü–ò–°–ê–ù–ò–Ø (description)

–ß–¢–û –ù–£–ñ–ù–û –ü–†–ï–î–õ–û–ñ–ò–¢–¨:

**1. –°–õ–û–ì–ê–ù (tagline)** - —Å–¥–µ–ª–∞—Ç—å –±–æ–ª–µ–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º, —è—Å–Ω—ã–º –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–º—Å—è
  –ü—Ä–∏–º–µ—Ä—ã —Ç–∏–ø–æ–≤ —Å–ª–æ–≥–∞–Ω–æ–≤:
  - –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π: "–°–æ–∑–¥–∞–µ–º IT-—Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç: 98% —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤"
  - –° —Ü–∏—Ñ—Ä–∞–º–∏: "150+ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ ‚Ä¢ 5+ –ª–µ—Ç –æ–ø—ã—Ç–∞"
  - –° –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ–º: "–í–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏"

**2. –û–ü–ò–°–ê–ù–ò–ï (description)** - –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫—É
  –ü—Ä–∏–º–µ—Ä—ã —É–ª—É—á—à–µ–Ω–∏–π:
  - –î–æ–±–∞–≤–∏—Ç—å —Ü–∏—Ñ—Ä—ã: "98% –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–æ–≤–æ–ª—å–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º"
  - –î–æ–±–∞–≤–∏—Ç—å –æ–ø—ã—Ç: "15+ –ª–µ—Ç –Ω–∞ —Ä—ã–Ω–∫–µ IT-—Ä–µ—à–µ–Ω–∏–π"
  - –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: "–ü–æ–º–æ–≥–ª–∏ 150+ –∫–æ–º–ø–∞–Ω–∏—è–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∏–∑–Ω–µ—Å"

–í–ê–ñ–ù–´–ï –ü–†–ê–í–ò–õ–ê:
- –ü—Ä–µ–¥–ª–∞–≥–∞–π –î–í–ê —É–ª—É—á—à–µ–Ω–∏—è –≤ –æ–¥–Ω–æ–º –æ—Ç–≤–µ—Ç–µ (–º–∞—Å—Å–∏–≤ –∏–∑ 2 –æ–±—ä–µ–∫—Ç–æ–≤)
- –ü–µ—Ä–≤–æ–µ - –¥–ª—è —Å–ª–æ–≥–∞–Ω–∞, –≤—Ç–æ—Ä–æ–µ - –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –¢–ï–ö–£–©–ò–ï –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (JSON –ú–ê–°–°–ò–í):`,

    services: `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É IT-–∫–æ–º–ø–∞–Ω–∏–π. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π SERVICES —Å–µ–∫—Ü–∏—é (—É—Å–ª—É–≥–∏).

–¢–í–û–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤—É—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é —É—Å–ª—É–≥—É –∏–ª–∏ —É–ª—É—á—à–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö, –∫–æ—Ç–æ—Ä–æ–µ —É–≤–µ–ª–∏—á–∏—Ç –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.

–ß–¢–û –ú–û–ñ–ù–û –ü–†–ï–î–õ–û–ñ–ò–¢–¨:
- –ù–æ–≤—É—é –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—É—é —É—Å–ª—É–≥—É (Audit, Support, Consulting)
- –î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —É—Å–ª—É–≥–∞–º
- –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ –¥–ª—è –Ω–∏—à–∏

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (JSON):`,

    contacts: `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É IT-–∫–æ–º–ø–∞–Ω–∏–π. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π CONTACTS —Å–µ–∫—Ü–∏—é (–∫–æ–Ω—Ç–∞–∫—Ç—ã).

–¢–í–û–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–æ–≤–µ—Ä–∏—è.

–ß–¢–û –ú–û–ñ–ù–û –ü–†–ï–î–õ–û–ñ–ò–¢–¨:
- –î–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏ (Telegram, WhatsApp)
- –†–∞–±–æ—á–∏–µ —á–∞—Å—ã –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –¥–æ–≤–µ—Ä–∏—è
- –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ñ–∏—Å—ã/–ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (JSON):`,

    social: `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É IT-–∫–æ–º–ø–∞–Ω–∏–π. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π SOCIAL NETWORKS —Å–µ–∫—Ü–∏—é.

–¢–í–û–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è –≤ —Å–æ—Ü —Å–µ—Ç—è—Ö –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–æ–≤–µ—Ä–∏—è.

–ß–¢–û –ú–û–ñ–ù–û –ü–†–ï–î–õ–û–ñ–ò–¢–¨:
- –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (LinkedIn, GitHub, Medium)
- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –¥–ª—è –¥–æ–≤–µ—Ä–∏—è
- –°—Å—ã–ª–∫–∏ –Ω–∞ –∫–µ–π—Å—ã –≤ —Å–æ—Ü —Å–µ—Ç—è—Ö

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (JSON):`,

    'seo-meta': `–¢—ã - SEO —ç–∫—Å–ø–µ—Ä—Ç. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π SEO META TAGS —Å–µ–∫—Ü–∏—é.

–¢–í–û–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ –¥–ª—è meta —Ç–µ–≥–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–≤—ã—Å–∏—Ç –ø–æ–∑–∏—Ü–∏–∏ –≤ –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö –∏ CTR.

–ß–¢–û –ú–û–ñ–ù–û –ü–†–ï–î–õ–û–ñ–ò–¢–¨:
- –£–ª—É—á—à–∏—Ç—å Title –¥–ª—è –±–æ–ª—å—à–µ–π –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ (–¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä—ã, —Ü–∏—Ñ—Ä—ã, —ç–º–æ–¥–∑–∏)
- –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å Description –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è CTR
- –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ Keywords
- –£–ª—É—á—à–∏—Ç—å Author/Keywords –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (JSON):`,

    'seo-content': `–¢—ã - SEO —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π SEO CONTENT —Å–µ–∫—Ü–∏—é.

–¢–í–û–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–≤–µ–ª–∏—á–∏—Ç –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–π —Ç—Ä–∞—Ñ–∏–∫.

–ß–¢–û –ú–û–ñ–ù–û –ü–†–ï–î–õ–û–ñ–ò–¢–¨:
- H1/H2 –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
- Alt-—Ç–µ–∫—Å—Ç—ã –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (Schema.org)
- FAQ —Å–µ–∫—Ü–∏—é —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (JSON):`,

    stats: `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–æ–Ω–≤–µ—Ä—Å–∏–æ–Ω–Ω–æ–º—É –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π STATISTICS —Å–µ–∫—Ü–∏—é.

–¢–í–û–Ø –ó–ê–î–ê–ß–ê:
–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –∫–æ—Ç–æ—Ä–∞—è —É–≤–µ–ª–∏—á–∏—Ç –¥–æ–≤–µ—Ä–∏–µ –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏—é.

–ß–¢–û –ú–û–ñ–ù–û –ü–†–ï–î–õ–û–ñ–ò–¢–¨:
- –í–ø–µ—á–∞—Ç–ª—è—é—â–∏–µ —Ü–∏—Ñ—Ä—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π (–ø—Ä–æ–µ–∫—Ç—ã, –∫–ª–∏–µ–Ω—Ç—ã, –æ–ø—ã—Ç)
- –ü—Ä–æ—Ü–µ–Ω—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
- –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã / –°–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞
- –≠–∫–æ–Ω–æ–º–∏—è/—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (JSON):`
  };

  return prompts[sectionType] || prompts.hero;
};

const AI_SUGGESTION_PROMPT_BASE = `
–ü–†–ê–í–ò–õ–ê:
1. –î–∞–≤–∞–π –¢–û–õ–¨–ö–û –û–î–ù–û –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞ —Ä–∞–∑
2. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∏ –≥–æ—Ç–æ–≤—ã–º –∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é
3. –§–æ–∫—É—Å –Ω–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ –¥–æ–≤–µ—Ä–∏—è –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
4. –ê–ù–ê–õ–ò–ó–ò–†–£–ô –¢–ï–ö–£–©–ò–ï –î–ê–ù–ù–´–ï –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π —É–ª—É—á—à–µ–Ω–∏—è –∏–º–µ–Ω–Ω–æ –¥–ª—è –≠–¢–û–ô –∫–æ–º–ø–∞–Ω–∏–∏
5. –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:

{
  "type": "hero_stat" | "hero_tagline" | "service" | "contact_method" | "social_platform" | "seo_meta" | "seo_keyword" | "statistic",
  "suggestion": "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
  "data": { ... },
  "reason": "–ü–æ—á–µ–º—É —ç—Ç–æ —É–≤–µ–ª–∏—á–∏—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é/SEO"
}

–ü–†–ò–ú–ï–†–´ –§–û–†–ú–ê–¢–ê (–∞–¥–∞–ø—Ç–∏—Ä—É–π –ø–æ–¥ —Ç–µ–∫—É—â—É—é –∫–æ–º–ø–∞–Ω–∏—é):

Hero —Å–µ–∫—Ü–∏—è (–ú–ê–°–°–ò–í –ò–ó 2 –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ô):
[
  {
    "type": "hero_tagline",
    "suggestion": "–£–ª—É—á—à–∏—Ç—å —Å–ª–æ–≥–∞–Ω –¥–ª—è –±–æ–ª—å—à–µ–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏",
    "data": {
      "field": "tagline",
      "newValue": "AI-Powered Landing Pages That Convert: Create, Launch, Grow - No Code Required"
    },
    "reason": "–ù–æ–≤—ã–π —Å–ª–æ–≥–∞–Ω —Ñ–æ–∫—É—Å–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ (–∫–æ–Ω–≤–µ—Ä—Å–∏–∏) –∏ –ø—Ä–æ—Ü–µ—Å—Å–µ (—Å–æ–∑–¥–∞—Ç—å, –∑–∞–ø—É—Å—Ç–∏—Ç—å, —Ä–∞—Å—Ç–∏), –¥–æ–±–∞–≤–ª—è—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ 'No Code'"
  },
  {
    "type": "hero_stat",
    "suggestion": "–î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
    "data": {
      "field": "description",
      "newValue": "Build professional landing pages with AI assistance. No coding required. Perfect for agencies. –ò—Å–ø–æ–ª—å–∑—É—é—Ç 3,500+ –±–∏–∑–Ω–µ—Å–æ–≤, 8,200+ —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤ –∏ 4,300+ –∞–≥–µ–Ω—Ç—Å—Ç–≤ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É"
    },
    "reason": "–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã (3,500+ –±–∏–∑–Ω–µ—Å–æ–≤) —Å–æ–∑–¥–∞—é—Ç —Å–∏–ª—å–Ω–æ–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç –º–∞—Å—à—Ç–∞–± –æ—Ö–≤–∞—Ç–∞, —á—Ç–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –¥–æ–≤–µ—Ä–∏–µ –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏—é –Ω–∞ 15-20%"
  }
]

Services —Å–µ–∫—Ü–∏—è:
{
  "type": "service",
  "suggestion": "–î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é —É—Å–ª—É–≥—É –¥–ª—è –¥–∞–Ω–Ω–æ–π –Ω–∏—à–∏",
  "data": {
    "title": "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —É—Å–ª—É–≥–∏",
    "description": "–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏",
    "category": "–ö–∞—Ç–µ–≥–æ—Ä–∏—è"
  },
  "reason": "–ü–æ—á–µ–º—É —ç—Ç–∞ —É—Å–ª—É–≥–∞ –≤–∞–∂–Ω–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞"
}

SEO Meta —Å–µ–∫—Ü–∏—è:
{
  "type": "seo_meta",
  "suggestion": "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å Title –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è CTR",
  "data": {
    "field": "title",
    "newValue": "–£–ª—É—á—à–µ–Ω–Ω—ã–π Title —Å —Ç—Ä–∏–≥–≥–µ—Ä–∞–º–∏ –∏ —Ü–∏—Ñ—Ä–∞–º–∏"
  },
  "reason": "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –≤ –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–µ –Ω–∞ 15-25%"
}

Statistics —Å–µ–∫—Ü–∏—è:
{
  "type": "statistic",
  "suggestion": "–î–æ–±–∞–≤–∏—Ç—å –≤–ø–µ—á–∞—Ç–ª—è—é—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
  "data": {
    "value": "150+",
    "label": "–£—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤",
    "icon": "üìä"
  },
  "reason": "–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã —Å–æ–∑–¥–∞—é—Ç –¥–æ–≤–µ—Ä–∏–µ –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç –æ–ø—ã—Ç"
}

Contacts/Social —Å–µ–∫—Ü–∏—è:
{
  "type": "contact_method",
  "suggestion": "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –∫–∞–Ω–∞–ª —Å–≤—è–∑–∏",
  "data": {
    "field": "–Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è",
    "value": "–∑–Ω–∞—á–µ–Ω–∏–µ"
  },
  "reason": "–ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è —ç—Ç–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏"
}

–¢–ï–ö–£–©–ò–ï –î–ê–ù–ù–´–ï –ö–û–ú–ü–ê–ù–ò–ò:
`;

export default function AISuggestions({ sectionType, currentData, onApplySuggestion, onClose }) {
  const [suggestion, setSuggestion] = useState(null);
  const [suggestions, setSuggestions] = useState([]); // –î–ª—è hero - –º–∞—Å—Å–∏–≤ –∏–∑ 2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [applied, setApplied] = useState(false);

  // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const companyName = currentData.hero?.companyName || '–∫–æ–º–ø–∞–Ω–∏—è';

  const generateSuggestion = async () => {
    setLoading(true);
    setError(null);
    setApplied(false);

    try {
      // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å–µ–∫—Ü–∏–∏
      const sectionPrompt = getSectionPrompt(sectionType);

      // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
      const companyName = currentData.hero?.companyName || '–∫–æ–º–ø–∞–Ω–∏—è';
      const companyDescription = currentData.hero?.description || '';

      // –î–ª—è Hero —Å–µ–∫—Ü–∏–∏ –Ω–µ –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ - AI –≤–µ—Ä–Ω–µ—Ç –º–∞—Å—Å–∏–≤ –∏–∑ 2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
      let focusInstruction = '';

      // –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç–µ–∫—É—â–µ–π —Å–µ–∫—Ü–∏–∏
      let sectionData;
      if (sectionType === 'hero') {
        sectionData = currentData.hero;
      } else if (sectionType === 'services') {
        sectionData = { heading: currentData.services?.heading };
      } else if (sectionType === 'contacts') {
        sectionData = currentData.contacts;
      } else if (sectionType === 'social') {
        sectionData = currentData.social;
      } else if (sectionType === 'seo-meta') {
        sectionData = currentData.seo || { title: '', description: '', keywords: '', author: '' };
      } else if (sectionType === 'seo-content') {
        sectionData = { seo: currentData.seo, hero: currentData.hero };
      } else if (sectionType === 'stats') {
        sectionData = currentData.stats || { enabled: false, items: [] };
      } else {
        sectionData = currentData;
      }

      const contextInfo = `
–ö–û–ù–¢–ï–ö–°–¢:
–ö–æ–º–ø–∞–Ω–∏—è: ${companyName}
–û–ø–∏—Å–∞–Ω–∏–µ: ${companyDescription}
–°–µ–∫—Ü–∏—è: ${sectionType}
`;

      const fullPrompt = contextInfo + '\n' + sectionPrompt + '\n\n' + AI_SUGGESTION_PROMPT_BASE + '\n\n' + JSON.stringify(sectionData, null, 2);
      
      const systemPrompt = `You are a marketing expert analyzing ${companyName}. 
Your task is to provide specific, actionable suggestions based on THEIR actual data and business context.
Respond ONLY with valid JSON. Do NOT use generic examples.`;

      const response = await chatWithDeepSeek([
        { role: 'system', content: systemPrompt },
        { role: 'user', content: fullPrompt }
      ]);

      // –ü–∞—Ä—Å–∏–º JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
      // –î–ª—è hero –∏—â–µ–º –º–∞—Å—Å–∏–≤, –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö - –æ–±—ä–µ–∫—Ç
      if (sectionType === 'hero') {
        const arrayMatch = response.match(/\[[\s\S]*\]/);
        if (arrayMatch) {
          const suggestionsData = JSON.parse(arrayMatch[0]);
          if (Array.isArray(suggestionsData) && suggestionsData.length >= 2) {
            setSuggestions(suggestionsData);
          } else {
            throw new Error('AI –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –º–∞—Å—Å–∏–≤ –∏–∑ 2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –¥–ª—è Hero');
          }
        } else {
          throw new Error('AI –Ω–µ –≤–µ—Ä–Ω—É–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –º–∞—Å—Å–∏–≤');
        }
      } else {
        const jsonMatch = response.match(/\{[\s\S]*\}/);
        if (jsonMatch) {
          const suggestionData = JSON.parse(jsonMatch[0]);
          setSuggestion(suggestionData);
        } else {
          throw new Error('AI –Ω–µ –≤–µ—Ä–Ω—É–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON');
        }
      }
    } catch (err) {
      console.error('Error generating suggestion:', err);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
    } finally {
      setLoading(false);
    }
  };

  const handleApply = () => {
    if (suggestion && onApplySuggestion) {
      onApplySuggestion(suggestion);
      setApplied(true);
      
      // –ß–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥—ã –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
      setTimeout(() => {
        generateSuggestion();
      }, 1500);
    }
  };

  const handleSkip = () => {
    generateSuggestion();
  };

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
  React.useEffect(() => {
    generateSuggestion();
  }, []);

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-gray-900 border border-gray-800 rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        {/* Header */}
        <div className="sticky top-0 bg-gray-900 border-b border-gray-800 p-6 flex justify-between items-center">
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-purple-500 bg-opacity-20 rounded-lg flex items-center justify-center">
              <Sparkles className="text-purple-400" size={20} />
            </div>
            <div>
              <h2 className="text-xl font-bold">AI Suggestions</h2>
              <p className="text-sm text-gray-400">
                <span className="text-white font-medium">{companyName}</span> ‚Ä¢ –£–ª—É—á—à–∞–µ–º: <span className="text-purple-400 font-medium capitalize">
                  {sectionType === 'hero' ? 'Main Hero' :
                   sectionType === 'services' ? 'Services' :
                   sectionType === 'contacts' ? 'Contacts' :
                   sectionType === 'social' ? 'Social Networks' :
                   sectionType === 'seo-meta' ? 'SEO Meta Tags' :
                   sectionType === 'seo-content' ? 'SEO Content' :
                   sectionType === 'stats' ? 'Statistics' :
                   sectionType}
                </span>
              </p>
            </div>
          </div>
          <button
            onClick={onClose}
            className="p-2 hover:bg-gray-800 rounded-lg transition-colors"
          >
            <X size={20} />
          </button>
        </div>

        {/* Content */}
        <div className="p-6">
          {loading && (
            <div className="flex flex-col items-center justify-center py-12">
              <Loader className="animate-spin text-purple-400 mb-4" size={40} />
              <p className="text-gray-400">AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ...</p>
            </div>
          )}

          {!loading && error && (
            <div className="bg-red-500 bg-opacity-10 border border-red-500 border-opacity-30 rounded-lg p-4 mb-4">
              <p className="text-red-400">{error}</p>
              <button
                onClick={generateSuggestion}
                className="mt-3 px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors flex items-center gap-2"
              >
                <RefreshCw size={16} />
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          )}

          {!loading && applied && (
            <div className="bg-green-500 bg-opacity-10 border border-green-500 border-opacity-30 rounded-lg p-4 mb-4 flex items-center gap-3">
              <Check className="text-green-400" size={24} />
              <div>
                <p className="font-semibold text-green-400">–û—Ç–ª–∏—á–Ω–æ! –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ!</p>
                <p className="text-sm text-gray-400">–ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å–ª–µ–¥—É—é—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ...</p>
              </div>
            </div>
          )}

          {/* –î–ª—è Hero - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º 2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è */}
          {!loading && sectionType === 'hero' && suggestions.length > 0 && (
            <div className="space-y-3">
              {/* –°–ª–æ–≥–∞–Ω */}
              <div className="bg-gray-800 border border-gray-700 rounded-lg p-4">
                <div className="flex items-start gap-2 mb-3">
                  <div className="w-6 h-6 bg-purple-500 bg-opacity-20 rounded flex items-center justify-center flex-shrink-0 mt-0.5">
                    <Sparkles className="text-purple-400" size={14} />
                  </div>
                  <div className="flex-1">
                    <h3 className="font-semibold text-base mb-1">{suggestions[0].suggestion}</h3>
                    <p className="text-xs text-gray-400">
                      üí° {suggestions[0].reason}
                    </p>
                  </div>
                </div>

                <div className="bg-gray-900 border border-gray-700 rounded-lg p-3 mb-3">
                  <p className="text-xs text-gray-500 mb-1.5">–°–ª–æ–≥–∞–Ω:</p>
                  <p className="text-sm font-medium text-gray-200">{suggestions[0].data.newValue}</p>
                </div>

                <div className="flex gap-2">
                  <button
                    onClick={() => {
                      if (onApplySuggestion) {
                        onApplySuggestion(suggestions[0]);
                        setApplied(true);
                        setTimeout(() => setApplied(false), 1500);
                      }
                    }}
                    className="flex-1 px-4 py-2 bg-gradient-to-r from-purple-500 to-blue-500 text-white rounded-lg hover:from-purple-600 hover:to-blue-600 transition-all flex items-center justify-center gap-2 text-sm font-medium"
                  >
                    <Check size={16} />
                    –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                  </button>
                  <button
                    onClick={() => generateSuggestion()}
                    className="px-4 py-2 bg-gray-700 text-gray-300 rounded-lg hover:bg-gray-600 transition-all flex items-center justify-center gap-2 text-sm font-medium"
                  >
                    <RefreshCw size={16} />
                    –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
                  </button>
                </div>
              </div>

              {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
              <div className="bg-gray-800 border border-gray-700 rounded-lg p-4">
                <div className="flex items-start gap-2 mb-3">
                  <div className="w-6 h-6 bg-purple-500 bg-opacity-20 rounded flex items-center justify-center flex-shrink-0 mt-0.5">
                    <Sparkles className="text-purple-400" size={14} />
                  </div>
                  <div className="flex-1">
                    <h3 className="font-semibold text-base mb-1">{suggestions[1].suggestion}</h3>
                    <p className="text-xs text-gray-400">
                      üí° {suggestions[1].reason}
                    </p>
                  </div>
                </div>

                <div className="bg-gray-900 border border-gray-700 rounded-lg p-3 mb-3">
                  <p className="text-xs text-gray-500 mb-1.5">–û–ø–∏—Å–∞–Ω–∏–µ:</p>
                  <p className="text-sm text-gray-200 leading-relaxed">{suggestions[1].data.newValue}</p>
                </div>

                <div className="flex gap-2">
                  <button
                    onClick={() => {
                      if (onApplySuggestion) {
                        onApplySuggestion(suggestions[1]);
                        setApplied(true);
                        setTimeout(() => setApplied(false), 1500);
                      }
                    }}
                    className="flex-1 px-4 py-2 bg-gradient-to-r from-purple-500 to-blue-500 text-white rounded-lg hover:from-purple-600 hover:to-blue-600 transition-all flex items-center justify-center gap-2 text-sm font-medium"
                  >
                    <Check size={16} />
                    –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                  </button>
                  <button
                    onClick={() => generateSuggestion()}
                    className="px-4 py-2 bg-gray-700 text-gray-300 rounded-lg hover:bg-gray-600 transition-all flex items-center justify-center gap-2 text-sm font-medium"
                  >
                    <RefreshCw size={16} />
                    –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
                  </button>
                </div>
              </div>

              {/* Single Close Button */}
              <button
                onClick={onClose}
                className="w-full px-6 py-2.5 bg-gray-800 text-gray-300 rounded-lg hover:bg-gray-700 transition-all font-medium text-sm"
              >
                –ó–∞–∫–æ–Ω—á–∏—Ç—å
              </button>

              {/* Footer */}
              <div className="bg-blue-500/5 border border-blue-500/20 rounded-lg p-3 flex items-start gap-2">
                <div className="text-blue-400 mt-0.5 text-sm">üí¨</div>
                <p className="text-xs text-blue-400">
                  AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤ –ª–∏–¥—ã.
                </p>
              </div>
            </div>
          )}

          {/* –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–µ–∫—Ü–∏–π - –æ–±—ã—á–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
          {!loading && sectionType !== 'hero' && suggestion && (
            <div className="space-y-4">
              {/* Suggestion Card */}
              <div className="bg-gray-800 border border-gray-700 rounded-lg p-5">
                <div className="flex items-start gap-3 mb-4">
                  <div className="w-8 h-8 bg-purple-500 bg-opacity-20 rounded flex items-center justify-center flex-shrink-0 mt-1">
                    <Sparkles className="text-purple-400" size={16} />
                  </div>
                  <div className="flex-1">
                    <h3 className="font-semibold text-lg mb-2">{suggestion.suggestion}</h3>
                    <p className="text-sm text-gray-400 mb-4">
                      üí° <span className="font-medium text-gray-300">–ü–æ—á–µ–º—É —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</span> {suggestion.reason}
                    </p>
                  </div>
                </div>

                {/* Preview */}
                <div className="bg-gray-900 border border-gray-700 rounded-lg p-4">
                  <p className="text-xs text-gray-500 uppercase mb-2 font-medium">–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä:</p>
                  <div className="text-sm">
                    {/* Hero Section Previews */}
                    {(suggestion.type === 'hero_stat' || suggestion.type === 'hero_tagline') && (
                      <div className="space-y-2">
                        {suggestion.data.field === 'description' && (
                          <div className="text-gray-300">
                            <p className="text-xs text-gray-500 mb-1">–û–ø–∏—Å–∞–Ω–∏–µ:</p>
                            <p className="leading-relaxed">{suggestion.data.newValue}</p>
                          </div>
                        )}
                        {suggestion.data.field === 'tagline' && (
                          <div className="text-gray-300">
                            <p className="text-xs text-gray-500 mb-1">–°–ª–æ–≥–∞–Ω:</p>
                            <p className="text-lg font-semibold">{suggestion.data.newValue}</p>
                          </div>
                        )}
                        {suggestion.data.field === 'companyName' && (
                          <div className="text-gray-300">
                            <p className="text-xs text-gray-500 mb-1">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏:</p>
                            <p className="text-xl font-bold">{suggestion.data.newValue}</p>
                          </div>
                        )}
                      </div>
                    )}

                    {/* Statistic Preview */}
                    {suggestion.type === 'statistic' && (
                      <div className="space-y-2">
                        <div className="flex items-center gap-3 bg-gradient-to-br from-blue-500/10 to-purple-500/10 border border-blue-500/30 rounded-lg p-3">
                          <span className="text-2xl">{suggestion.data.icon || 'üìä'}</span>
                          <div>
                            <p className="text-2xl font-bold text-white">{suggestion.data.value}</p>
                            <p className="text-xs text-gray-400">{suggestion.data.label}</p>
                          </div>
                        </div>
                      </div>
                    )}

                    {/* SEO Meta Preview */}
                    {suggestion.type === 'seo_meta' && (
                      <div className="space-y-2">
                        <p className="text-xs text-gray-500 mb-1 capitalize">{suggestion.data.field}:</p>
                        <div className="bg-gray-800/50 border border-gray-700 rounded p-2">
                          <p className="text-white text-sm font-medium">{suggestion.data.newValue}</p>
                        </div>
                      </div>
                    )}

                    {/* Service Preview */}
                    {suggestion.type === 'service' && (
                      <div className="space-y-2">
                        <p className="font-semibold text-white">{suggestion.data.title}</p>
                        <p className="text-gray-400 text-xs">{suggestion.data.description}</p>
                        <span className="inline-block text-xs px-2 py-1 bg-gray-800 rounded">
                          {suggestion.data.category}
                        </span>
                      </div>
                    )}

                    {/* Contact Method Preview */}
                    {suggestion.type === 'contact_method' && (
                      <div className="space-y-2">
                        <p className="text-xs text-gray-500">–ù–æ–≤–æ–µ –ø–æ–ª–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞:</p>
                        <div className="flex items-center gap-2">
                          <span className="text-gray-400 capitalize">{suggestion.data.field}:</span>
                          <span className="text-white font-medium">{suggestion.data.value}</span>
                        </div>
                      </div>
                    )}

                    {/* Social Platform Preview */}
                    {suggestion.type === 'social_platform' && (
                      <div className="space-y-2">
                        <p className="text-xs text-gray-500">–ù–æ–≤–∞—è —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å:</p>
                        <div className="flex items-center gap-2">
                          <span className="text-gray-400 capitalize">{suggestion.data.platform}:</span>
                          <a href={suggestion.data.url} target="_blank" rel="noopener noreferrer" className="text-blue-400 hover:text-blue-300 text-xs">
                            {suggestion.data.url}
                          </a>
                        </div>
                      </div>
                    )}

                    {/* Benefit Preview */}
                    {suggestion.type === 'benefit' && (
                      <div className="space-y-2">
                        <p className="font-semibold text-white">{suggestion.data.title}</p>
                        <p className="text-gray-400 text-xs">{suggestion.data.description}</p>
                      </div>
                    )}

                    {/* Other types */}
                    {(suggestion.type === 'case_study' || suggestion.type === 'testimonial') && (
                      <div className="text-gray-300">
                        <pre className="whitespace-pre-wrap text-xs">
                          {JSON.stringify(suggestion.data, null, 2)}
                        </pre>
                      </div>
                    )}
                  </div>
                </div>
              </div>

              {/* Actions */}
              <div className="flex gap-3">
                <button
                  onClick={handleApply}
                  disabled={applied}
                  className="flex-1 py-3 bg-gradient-to-r from-purple-500 to-blue-500 text-white rounded-lg hover:from-purple-600 hover:to-blue-600 transition-all font-semibold flex items-center justify-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  <Check size={20} />
                  {applied ? '–ü—Ä–∏–º–µ–Ω–µ–Ω–æ!' : '–î–∞, –¥–∞–≤–∞–π! –ü—Ä–∏–º–µ–Ω–∏—Ç—å'}
                </button>

                <button
                  onClick={handleSkip}
                  disabled={loading || applied}
                  className="px-6 py-3 bg-gray-800 border border-gray-700 rounded-lg hover:bg-gray-750 transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
                </button>

                <button
                  onClick={generateSuggestion}
                  disabled={loading || applied}
                  className="px-6 py-3 bg-gray-800 border border-gray-700 rounded-lg hover:bg-gray-750 transition-colors flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  <RefreshCw size={18} />
                  –î—Ä—É–≥–æ–µ
                </button>
              </div>

              {/* Info */}
              <div className="bg-blue-500 bg-opacity-10 border border-blue-500 border-opacity-30 rounded-lg p-4">
                <p className="text-sm text-blue-400">
                  üí¨ AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤ –ª–∏–¥—ã. 
                  –ö–∞–∂–¥–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞.
                </p>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}

